BitBay - 0xE0e7A345D509Cb2CA4fF06802A1dedF689d1d1C1
Liquidity Pool - 0x1e691D30a47F5022b43f1864A4C4316f05711D34
Administration - 0x7945CB7aaa3af85F5f43b3569a0BC8C4547bA6e6
BAY Liquid - 0x77f68054B5395d56A0BF4f0C207b839e2f956AFb
BAY Reserve - 0x24086f815b48Cfb78b879Fa184Cb6F2434108B19
BAY Frozen - 0xc1911aB4DEAAF12494504c9e1462051feF1c2993
Walrus Router - 0xeFE0a152ef2F095335EeAF6981a99dAaF37E8e2A
Walrus Swap - 0xC1d1274dc5Ccfecc1ed87e24648833B919b72203

Walrus Init code - 0xca8d36765345ef3ee12ebc7223ec92a56156aad321b79538296b8eb7c6cf32fa
WETH - 0xdfFd57fa61eC2ad0fa260Fa8368ff7F2EEF4407E

Test Halo bridge starts with
**M**b677f2790c4aabe172484a329694cfb54ec9cd93b38a3d2082b6d456f5e96f2d
if meaning['message'][5:]=="b677f2790c4aabe172484a329694cfb54ec9cd93b38a3d2082b6d456f5e96f2d":#txhash("resume")

BridgeDB initiates with:
{'TrustedStakers1':["bNgmCcxPKgQQqUe6rhNtbGWowMJFCuxjZ3", "bEfg9bMLSgmjB5TDiur9FscZij4XXrd8C5", "bTuZboysrngsaqJvRj4db4CV2Qa21Q5Jcb", "bMvqdtSZtxDDBEj6NBHAg38iCdvmFwALix", "bJvBcHh45A6mjfKhy8Qg9AagbWfHWB1abC", "bN2NGi2bF1cpcQcsxmY4daCpi2tQqW5tnS", "bS4MGJKwN3vWCSgmsmYfXoJzS3QHPCRtcB", "BJLZ29gAk9aGW9HoAnsEzqmWp6BX7tZEN8", "bP66u6L53PmFppSszfDnUN7dBh6jeNw1uJ", "B8FqutWoHU6ixFxceZDkqvWARLERuTc4DL"],'TrustedStakers2':["bZ8sJgk1VsgbNcqUqBY5hNR9kMaJ5kksEG","bYf1uCCEc4Ge5juuHntYpJvuZ6L6fkqc9w","bYCwwHbSGo85k86Bd5S7drLQ2m1EnUcqTq","bURCwQiJhTSX2JA72LmPwCG3vF9zCpPB6J","bUjrA5QmFntnGABYfeaHbSf5QKF1ptmztr","bJMBgyS6u4SPFwJKGpcgWnPSRcuXF8iTme","bFEEzRWNWKGxFmjAkT1SmjNs8VTD9eTYje","bCqaStDHVoU89DWDjRxrsGbVFBWhxBFdP3","bbn4mJawLC8C26gfw4TVAcfRftiRvb6hZz","bamTjYPT5R822PLgVXUUUdYG6mQTnwmLtj","bbaeKoaSbH23JP1PHM7Fa3oPAfDLQjA9fr","bbbVueUaexGJgxkh2o2Eicd7nKDkuygGoc","bE2sWfTAKR556uFwFjkeQcgMQTFZU2c5c6","bG5WbMoXhMYEVa52ucZWjnidsqTidH7XoV","bHcSb6MC3dxAZbyBSMtSfq81WUF8odrfs6","bLRmZWd5mhE8H5AeSdXuRgwsdXAfEPRdDD","bSg6gu7nH8aHwz2FTqfNF3h6TBExozfkMc","bU7Fr7yrYJWgx6dTqpLW7Xs2Ztc7DBShNC","bWVt3Qp1M2m3qNc2JgBcis6v2fu2ARoBzh","bZT1vZsC123vFHpxwiXYTAt9k9kpfmhD9Y","BGGVksKTGoemBpDTUJw9tVw9M2t7EtFfzz","BKmirMrh6b5ku5scpc7AcJiTh8GSbc3aHR","BRHq9ae4FGD2sgDjqhbJj1K5iszWxZsju8","BEvukYqnXVw9Bj6q613igbBzeu7L8qydfZ","BScLEZPVsLZHeHjciV9boq5j1i8VtcJNkV","BGLCn3mQ4y8eMqm12cZmNtHohag2FvW5oc","BNV91VFGsRHPSepK4WAS9Bg7ghK9T179mM","BEpKZUcf7xCChU1xUgy9cCkou5Ujda1FTe","BEdhKEgAT1TvF3NBpTHmnXDPTrxG8SqvPj","BADnKcGJCFrvjhGxNjNgLw4pWmMLZTPDHm","BAvARoTNQa4e3pZcpso9JMwJbDgLRV3kaG","B9MWeWrJei6UCfeMN4yVnGSsjXR2fzPE7S","BJq1ChAvpqMPQ35PA12T6cAvwksGW2zNMa","B87SXHvyT1nco2ufyQjSfgDM8aCjutnqcJ","BNWtRUezdG26bn3AKNwvG4He1X6tLbrqQj","B8xvFpfLfLSadfmAv87JhqyGMjB86MD6Kz","B5ERP1AVtwa7BrjSyw9saqWp2dVzypgmDX","BF2o4AHkviLxH1ksxfMJr9PUY4mq94nXAe","B6B7QJwDBCBnumDdVCusNaX9FecKMdeEPM","BT8Kbtrqq9EWGAADGUKkrvFDN4GLoAZ5Xu","BLwT7rbNPBDVqMLnBTfbt4ARpdexjM1U34","BGLu8AzqiapcbufCabop4VWCzqZbYP2wJ8","BNuv6rfyadJ8HjCGgBbYuE1AcNQZFQBuKs","BHGUmQJZVN2vGjKCup2rBw6xn9b24FQaPh","BBoGzB9UpLHP8XLNJNAm7iG7f3SgvCYGJa","BTWKXR8Mi3s64bUaGVYnwL1XqmP6aTMWC3","B6q2EoNLbDDabWoDawaZBwtAS3FURncaHq","B515mPDfT4rTiLRUJFid2zrFRiGySxgj4Z","BSmBt2aNscgogCShoetG9aiRbtLznD4HEU","BNz1ZmfSaZwS2pduJ5QaVeBeUVnqwRPC1p","B6mh9dJi5zVYH2coYeyEFbutWrt7389159","BAuzwad1RErngpU4vs4TGoN61otqDq9eKE","BMPh6mYvDcUrLxHJDxqopuNejZPYwz5C1s","B8oTydfgHLZvA8n5UijXiht3f8mX3cSYEj","BCfVrB6Wrec9H3LTuy6PunUXAwJEHBXbka","B6dNMw2yd4LAiefePu7FaHGY3ALNZuMk3h","BLaqBwjuvytkE1HYDCCKWsvJ9gPxNypPAf","BAnifB1UKBMqV4hu9DtTZ7Qj4JBAEm8dKB","BByxgD9v6YbxvmauuPdgqa8Yk2o5pekVPW","BAJfus7iFaQ4rFSke5KzE367qzvf5R9thM","BNFFzvTApN8JtFcWgjQHKCezKthuu6bDdv","BCJxZgskT61557Jf2DmtwYvHJVaeRrwok6","B6QNEmPwd3ZDdqWRp1o6cTXaDGnXwevkjA","BDAXuYqpAjvP6P1rCQmvcBabbXhkg9KPSb"],'N':[3,0,0],'T':[3,0,0],'X':[3,4,0],'B':[3,4,0],'M':[3,4,0],'exchanges':{},'bridges':[{'n':'Goerli Testnet','s':'ETH','l':['https://rpc.ankr.com/eth_goerli'],'i':5,'c':'0xE0e7A345D509Cb2CA4fF06802A1dedF689d1d1C1','p':30,'m':8}]}

Merkle list when initiated
{'0': {'timestamp': 1705989977, 'supply': 0, 'transactions': []}}

Two transactions sent this to be checked...
ThePeg.Pegdatabase['merklelist']={'0': {'timestamp': 1705989977, 'supply': 0, 'transactions': [{'to': '0x93AAfed0319B064De0acC8233283F293eE6aa8e0', 'network': 'Goerli Testnet', 'pool': [103187104, 102155233, 101133681, 100122345, 99121121, 98129911, 97148611, 96177125, 95215353, 94263199, 93320568, 92387362, 91463488, 90548854, 89643365, 88746931, 87859456, 86980862, 86111053, 85249942, 84397443, 83553469, 82717933, 81890755, 81071847, 80261129, 79458517, 78663930, 77877290, 77098517, 76327533, 75564257, 74808615, 74060528, 73319923, 72586724, 71860856, 71142248, 70430826, 69726517, 69029252, 68338960, 67655570, 66979014, 66309224, 65646133, 64989670, 64339775, 63696377, 63059412, 62428819, 61804546, 61186500, 60574636, 59968889, 59369200, 58775509, 58187752, 57605875, 57029816, 56459519, 55894922, 55335974, 54782657, 54234829, 53692482, 53155557, 52624001, 52097761, 51576784, 51061017, 50550406, 50044902, 49544453, 49049009, 48558519, 48072934, 47592205, 47116282, 46645119, 46178669, 45716882, 45259713, 44807114, 44359045, 43915455, 43476299, 43041536, 42611122, 42185011, 41763160, 41345527, 40932073, 40522753, 40117525, 39716349, 39319186, 38925994, 38536735, 38151366, 37769854, 37392155, 37018233, 36648051, 36281570, 35918754, 35559568, 35203972, 34851931, 34503412, 34158378, 33816795, 33478627, 33143840, 32812402, 32484277, 32159436, 31837841, 31519462, 31204267, 30892223, 30583303, 30277470, 29974695, 29674948, 29378199, 29084417, 28793573, 28505637, 28220581, 27938374, 27658990, 27382400, 27108576, 26837490, 26569116, 26303425, 26040391, 25779987, 25522186, 25266964, 25014295, 24764153, 24516510, 24271345, 24028633, 23788346, 23550462, 23314956, 23081808, 22850990, 22622481, 22396255, 22172293, 21950569, 21731063, 21513753, 21298616, 21085630, 20874773, 20666025, 20459365, 20254771, 20052224, 19851700, 19653185, 19456653, 19262088, 19069466, 18878770, 18689983, 18503083, 18318052, 18134871, 17953524, 17773988, 17596248, 17420284, 17246084, 17073622, 16902886, 16733857, 16566517, 16400853, 16236844, 16074476, 15913731, 15754595, 15597049, 15441078, 15286667, 15133802, 14982464, 14832640, 14684313, 14537469, 14392094, 14248174, 14105693, 13964636, 13824990, 13686740, 13549872, 13414373, 13280229, 13147427, 13015953, 12885793, 12756935, 12629365, 12503072, 12378043, 12254261, 12131719, 12010402, 11890298, 11771394, 11653681, 11537143, 11421771, 11307555, 11194478, 11082533, 10971708, 10861991, 10753371, 10645839, 10539381, 10433986, 10329646, 10226349, 10124086, 10022845, 9922617, 9823390, 9725155, 9627903, 9531625, 9436308, 9341945, 9248526, 9156039, 9064479, 8973836, 8884097, 8795257, 8707304, 8620230, 8534028, 8448688, 8364201, 8280559, 8197753, 8115777, 8034618, 7954272, 7874729, 7795982, 7718021, 7640842, 7564432, 7488788, 7413900, 7339761, 7266364, 7193701, 7121764, 7050547, 6980042, 6910241, 6841138, 6772728, 6705000, 6637950, 6571570, 6505854, 6440795, 6376388, 6312624, 6249498, 6187003, 6125132, 6063881, 6003243, 5943210, 5883777, 5824940, 5766691, 5709024, 5651933, 5595414, 5539460, 5484065, 5429224, 5374932, 5321184, 5267972, 5215292, 5163139, 5111507, 5060392, 5009788, 4959691, 4910093, 4860992, 4812383, 4764258, 4716617, 4669451, 4622756, 4576528, 4530763, 4485455, 4440601, 4396194, 4352232, 4308711, 4265623, 4222967, 4180738, 4138930, 4097541, 4056565, 4016000, 3975839, 3936082, 3896720, 3857753, 3819175, 3780983, 3743174, 3705741, 3668684, 3631997, 3595678, 3559721, 3524124, 3488883, 3453994, 3419455, 3385260, 3351408, 3317893, 3284714, 3251866, 3219348, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'txid': '868f1a68b5c405c1aada5bd040d8d291e20ba119c7e81af285a7d90ac14b313f:1'}, {'to': '0x93AAfed0319B064De0acC8233283F293eE6aa8e0', 'network': 'Goerli Testnet', 'pool': [35244051, 34891611, 34542695, 34197268, 33855295, 33516742, 33181574, 32849760, 32521262, 32196050, 31874089, 31555349, 31239795, 30927398, 30618124, 30311942, 30008823, 29708735, 29411647, 29117531, 28826355, 28538092, 28252711, 27970183, 27690482, 27413578, 27139443, 26868048, 26599367, 26333374, 26070040, 25809340, 25551247, 25295734, 25042777, 24792349, 24544426, 24298982, 24055992, 23815432, 23577277, 23341505, 23108090, 22877009, 22648239, 24830429, 24582124, 24336303, 24092940, 23852011, 23613491, 69186320, 68494457, 67809513, 67131417, 66460103, 65795502, 65137547, 64486172, 63841310, 63202986, 62570956, 61945247, 188851021, 186962511, 185092886, 183241957, 181409537, 179595442, 177799487, 176021492, 174261277, 172518664, 170793478, 169085543, 167394688, 165720742, 164063533, 162422898, 160798669, 159190683, 157598776, 156022788, 154462560, 152917935, 151388755, 149874868, 148376119, 146892358, 145423435, 143969200, 142529508, 141104213, 139693171, 138296239, 136913277, 135544144, 134188702, 132846816, 131518347, 130203164, 128901132, 127612121, 126336000, 125072640, 123821914, 122583695, 121357857, 120144279, 118942836, 117753408, 116575873, 115410115, 114256014, 113113453, 111982320, 110862496, 109753871, 108656332, 107569769, 106494072, 105429131, 104374839, 103331091, 102297780, 101274803, 100262054, 99259434, 98266840, 97284171, 96311329, 95348216, 94394734, 93450787, 92516278, 91591116, 90675204, 89768452, 88870768, 87982061, 87102240, 86231217, 85368906, 84515216, 83670064, 82833364, 82005030, 81184979, 80373129, 79569399, 78773705, 77985968, 77206108, 76434046, 75669706, 74913009, 74163880, 73422240, 72688019, 71961138, 71241527, 70529111, 69823820, 69125582, 68434326, 67749983, 67072483, 66401759, 65737741, 65080363, 64429558, 63785264, 63147411, 62515937, 61890777, 61271869, 60659150, 60052559, 59452033, 58857513, 58268938, 57686249, 57109386, 56538292, 55972910, 55413180, 54859048, 54310458, 53767353, 53229680, 52697383, 52170409, 51648705, 51132218, 50620896, 50114687, 49613540, 49117405, 48626231, 48139968, 47658569, 47181983, 46710163, 46243061, 45780631, 45322824, 44869596, 44420900, 43976691, 43536924, 43101555, 42670539, 42243835, 41821396, 41403182, 40989150, 40579258, 40173466, 39771731, 39374014, 38980274, 38590471, 38204566, 37822521, 37444296, 37069852, 36699154, 36332162, 35968841, 35609153, 35253061, 34900531, 34551525, 34206010, 33863950, 33525310, 33190057, 32858157, 32529574, 32204279, 31882236, 31563414, 31247780, 30935302, 30625949, 30319689, 30016493, 29716328, 29419164, 29124973, 28833723, 28545386, 28259932, 27977333, 27697559, 27420583, 27146378, 26874914, 26606165, 26340104, 26076702, 25815935, 25557776, 25302199, 25049176, 24798685, 24550698, 24305190, 24062138, 23821517, 23583302, 23347469, 23113994, 22882854, 22654026, 22427485, 22203211, 21981179, 21761367, 21543753, 21328315, 21115032, 20903882, 20694843, 20487895, 20283016, 20080185, 19879384, 19680590, 19483784, 19288947, 19096057, 18905097, 18716045, 18528885, 18343596, 18160160, 17978558, 17798773, 17620785, 17444577, 17270132, 17097430, 16926456, 16757191, 16589619, 16423723, 16259486, 16096891, 15935922, 15776563, 15618797, 15462609, 15307983, 15154904, 15003354, 14853320, 14704788, 14557740, 14412162, 14268041, 14125360, 13984107, 13844266, 13705823, 13568765, 13433077, 13298746, 13165759, 13034101, 12903760, 12774723, 12646976, 12520505, 12395301, 12271348, 12148634, 12027148, 11906876, 11787808, 11669930, 11553230, 11437698, 11323321, 11210087, 11097987, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'txid': 'c26ee493dc9b10dac0ee43d828ce196d0457136b16b2062f853fab790935810e:1'}]}}

Eventually after a day of confirmation and no chance of changes system does this...
nonce = str(ThePeg.Pegdatabase['merklenonce'])
poolprev = copy.deepcopy(ThePeg.Pegdatabase['bridgepool'])
fundsprev = ThePeg.Pegdatabase['fundsout']
    try:
        if nonce in ThePeg.Pegdatabase['merklelist']:
            if ThePeg.Pegdatabase['merklelist'][nonce]['timestamp'] + ((ThePeg.Pegdatabase['merkleTimelimit']) * 2) < timestamp:
                ThePeg.Pegdatabase['merklelist'][nonce]['finalTX'] = {}
                for mytx in ThePeg.Pegdatabase['merklelist'][nonce]['transactions']:
                    ...check reference code here... merkle is created... notes explain how...
                    it figures out what the supply is and logs it for all transactions in this block(that number then becomes final for merkle)
                    it compresses fractions based on the steps and microsteps(see reference function)
                    it gets the LEAF of each transaction from Gecko(Firefox) bridge.htm javascript driver

                    ...sample result of compress fractions at supply of 0... (note the 30(mixed shards) + 8(smooth/temp) array is in one array but it's actually two)
                    currenct section 0(index 0) is left blank with 0, last 8 numbers are the "microsection" of section 0(smooth deflate)
                    [0, 2285064261L, 1528644339, 1022619876, 684103824, 457646172, 306152323, 204807256, 95177528, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 505719484, 480934199, 457363637, 434948244, 413631447, 393359383, 374080856, 355747171]

                    ...BridgeDriver.execute_script("return getLeaf("+str(mydata)+","+myval+");") #mydata is to, reserve, txid and myval is 38(total steps)
                    (get leaf in javascript driver is...)
                    web3[0].utils.keccak256(web3[0].eth.abi.encodeParameters(['address','uint256['+totalsteps+']','string'],thedata));//[to,array,txid]

                    Finishing with
					Processed Merkle Tree:0x8b8006a6a3db305753991ba2b41f4503cf231122ea1e9bde607c84e28c866605

ThePeg.Pegdatabase['merklelist'] = {'0': {'timestamp': 705989977, 'transactions': [], 'finalTX': {'Goerli Testnet': {'leaves': ['0x2717fa101ab8ae201e9d852b0522cc7f3486494557b48af679ed1864a407fca0', '0x9c8339e32baeafc79f1a34973e1fbd3bdbd2f26bf8fffeab3efe2de625b32657'], 'root': '0x8b8006a6a3db305753991ba2b41f4503cf231122ea1e9bde607c84e28c866605', 'section': 0}}, 'supply': 0}}

Transactions are both added to the master pool account
ThePeg.Pegdatabase['bridgepool']['Goerli Testnet']=[138431155, 137046844, 135676376, 134319613, 132976416, 131646653, 130330185, 129026885, 127736615, 126459249, 125194657, 123942711, 122703283, 121476252, 120261489, 119058873, 117868279, 116689597, 115522700, 114367473, 113223798, 112091561, 110970644, 109860938, 108762329, 107674707, 106597960, 105531978, 104476657, 103431891, 102397573, 101373597, 100359862, 99356262, 98362700, 97379073, 96405282, 95441230, 94486818, 93541949, 92606529, 91680465, 90763660, 89856023, 88957463, 90476562, 89571794, 88676078, 87789317, 86911423, 86042310, 130990866, 129680957, 128384149, 127100306, 125829303, 124571011, 123325299, 122092047, 120871126, 119662505, 118465878, 117281221, 243633678, 241197340, 238785368, 236397514, 234033538, 231693203, 229376271, 227082509, 224811683, 222563566, 220337931, 218134552, 215953207, 213793676, 211655738, 209539180, 207443788, 205369352, 203315658, 201282501, 199269674, 197276980, 195304210, 193351167, 191417655, 189503480, 187608446, 185732360, 183875035, 182036286, 180215924, 178413764, 176629626, 174863330, 173114696, 171383551, 169669713, 167973018, 166293287, 164630354, 162984051, 161354210, 159740668, 158143263, 156561829, 154996210, 153446248, 151911786, 150392668, 148888742, 147399854, 145925855, 144466597, 143021932, 141591712, 140175794, 138774036, 137386295, 136012434, 134652309, 133305786, 131972728, 130653002, 129346471, 128053007, 126772477, 125504752, 124249703, 123007206, 121777134, 120559363, 119353768, 118160232, 116978629, 115808843, 114650755, 113504247, 112369204, 111245512, 110133059, 109031726, 107941409, 106861997, 105793376, 104735441, 103688085, 102651207, 101624695, 100608449, 99602363, 98606339, 97620275, 96644072, 95677633, 94720856, 93773649, 92835911, 91907552, 90988476, 90078591, 89177806, 88286026, 87403168, 86529136, 85663847, 84807207, 83959133, 83119541, 82288347, 81465463, 80650808, 79844301, 79045857, 78255398, 77472843, 76698117, 75931135, 75171824, 74420106, 73675903, 72939145, 72209754, 71487656, 70772779, 70065053, 69364402, 68670758, 67984050, 67304211, 66631169, 65964858, 65305209, 64652156, 64005634, 63365579, 62731924, 62104604, 61483559, 60868723, 60260035, 59657434, 59060860, 58470251, 57885549, 57306693, 56733626, 56166289, 55604627, 55048582, 54498096, 53953115, 53413584, 52879448, 52350652, 51827147, 51308874, 50795785, 50287829, 49784949, 49287099, 48794229, 48306287, 47823223, 47344993, 46871543, 46402827, 45938799, 45479410, 45024617, 44574370, 44128627, 43687340, 43250465, 42817960, 42389782, 41965882, 41546224, 41130762, 40719453, 40312259, 39909138, 39510046, 39114946, 38723797, 38336558, 37953192, 37573661, 37197924, 36825945, 36457685, 36093110, 35732177, 35374855, 35021107, 34670896, 34324186, 33980946, 33641134, 33304723, 32971676, 32641960, 32315540, 31992386, 31672462, 31355737, 31042180, 30731758, 30424440, 30120197, 29818994, 29520804, 29225596, 28933339, 28644006, 28357567, 28073991, 27793251, 27515318, 27240164, 26967763, 26698086, 26431105, 26166793, 25905125, 25646075, 25389614, 25135717, 24884361, 24635517, 24389162, 24145269, 23903817, 23664780, 23428132, 23193850, 22961912, 22732292, 22504969, 22279920, 22057121, 21836549, 21618183, 21402002, 21187981, 20976103, 20766342, 20558678, 20353091, 20149560, 19948064, 19748584, 19551098, 19355586, 19162031, 18970411, 18780707, 18592900, 18406971, 18222901, 18040672, 17860266, 17681662, 17504847, 17329797, 17156499, 16984934, 16815084, 16646934, 16480464, 16315660, 16152502, 15990979, 15831069, 15672758, 15516031, 15360870, 15207263, 15055190, 14904638, 14755591, 14608035, 14461953, 14317335, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

Total funds out are needed to be known because we never allow users to inject more than the pool has.
ThePeg.Pegdatabase['fundsout']['Goerli Testnet']=30000000000

Also the nonce is moved +1 because that merkle was processed so now it looks to see if theres others to process for the next group of transactions

The governance on goerli vote on this and section is 0-29(since 30 sections for Goerli) and its notated in final processing in this case 0(100%)
function addMerkle(bytes32 mysha, uint section) public returns (bool)

Section 0 and supply 0 was because the test was at supply at 100% during final processing... note supply(steps/micro) to goerli conversion is done in compressfractions function. Fractions in goerli is a double matrix, the 30 mixed sections(with one being zeroed out for the current section) and 8 
being the current microsection for smooth deflation. A step on a future milestone is users who are "automating" the maintenance of solidity networks 
will publish the merkle if they are part of the governance for that coin(it auto-detects that in javascript/python). So the tree is published and the 
user will then see this as the user clicks on the receipt in their GUI to redeem on Goerli...

...user computes compressed shards based on supply DURING publishing(not current) and the shards of the tx
leaf = BridgeDriver.execute_script("return getLeaf("+str(mydata)+","+myval+");") #Same as before mydata is the compressed shards, myval 38
proof = BridgeDriver.execute_script("return showProof('"+myroot+"','"+leaf+"');")
proof = ast.literal_eval(json.dumps(proof))
mymerkle = {'root':myroot,'proof':proof,'address':thisaddy,'txid':txid,'reserve':AdvanceArray['bridgetx'][txid]['pool']}

So it shows them the data needed to put into Goerli(mymerkle) and note the reserve is the COMPRESSED shards that match goerli, not the 1200 BAY shards
Note that the section was published earlier so when they come into Goerli with the receipt it will match...

For example this is a receipt for one of the transactions...
{'txid': '868f1a68b5c405c1aada5bd040d8d291e20ba119c7e81af285a7d90ac14b313f:1', 'address': '0x93AAfed0319B064De0acC8233283F293eE6aa8e0', 'root': '0x8b8006a6a3db305753991ba2b41f4503cf231122ea1e9bde607c84e28c866605', 'reserve': [0, 2285064261L, 1528644339, 1022619876, 684103824, 457646172, 306152323, 204807256, 95177528, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 505719484, 480934199, 457363637, 434948244, 413631447, 393359383, 374080856, 355747171], 'proof': ['0x9c8339e32baeafc79f1a34973e1fbd3bdbd2f26bf8fffeab3efe2de625b32657']}

GUI tells user wait 48 hours(if QT isn't connected to Goerli it could give them an ETA instead)

Another side note is a users private key on Solidity is generated based on their main key. But you can hash the main key with salt to make it safe.
Then just console will let them be able to dump that governance key which should be based on their main account key. Or you can share keys between
BAY and Solidity which is totally possible(actually Halo currently uses the same keys)

Please unlock your wallet for staking to maintain the bridge!
Goerli Testnet
Address: 0xB9cE555219Ae7D963aA3D36F5E9ec313cEa8e3a0
Balance: 0.8
You are not a curator for this network.

When wallet is unlocked it can start to automate and that is a future milestone.