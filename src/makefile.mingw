# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

USE_UPNP:=0
USE_WALLET:=1

INCLUDEPATHS= -I$(BOOST_INCLUDE_PATH) -I$(BDB_INCLUDE_PATH) -I$(OPENSSL_INCLUDE_PATH)

LIBPATHS = -L$(BOOST_LIB_PATH) -L$(BDB_LIB_PATH) -L$(OPENSSL_LIB_PATH)

LIBS = \
   -l boost_system$(BOOST_LIB_SUFFIX) \
   -l boost_filesystem$(BOOST_LIB_SUFFIX) \
   -l boost_program_options$(BOOST_LIB_SUFFIX) \
   -l boost_thread$(BOOST_LIB_SUFFIX) \
   -l boost_chrono$(BOOST_LIB_SUFFIX) \
   -l db_cxx$(BDB_LIB_SUFFIX) \
   -l ssl \
   -l crypto 

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE
DEBUGFLAGS=-g
CFLAGS=-std=c++11 -mthreads -O2 -msse2 -w -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS += -Wl,--dynamicbase -Wl,--nxcompat
LDFLAGS += -static-libgcc -static-libstdc++

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
	override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I$(MINIUPNPC_LIB_PATH)/..
 LIBPATHS += -L$(MINIUPNPC_LIB_PATH)
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DMINIUPNP_STATICLIB -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/alert.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/init.o \
    obj/bitcoind.o \
    obj/keystore.o \
    obj/core.o \
    obj/main.o \
    obj/net.o \
    obj/protocol.o \
    obj/rpcclient.o \
    obj/rpcprotocol.o \
    obj/rpcserver.o \
    obj/rpcmisc.o \
    obj/rpcnet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/timedata.o \
    obj/script.o \
    obj/sync.o \
    obj/txmempool.o \
    obj/util.o \
    obj/hash.o \
    obj/noui.o \
    obj/kernel.o \
    obj/pbkdf2.o \
    obj/scrypt.o \
    obj/scrypt-x86.o \
    obj/scrypt-x86_64.o \
    obj/chainparams.o

ifeq (${USE_WALLET}, 1)
    DEFS += -DENABLE_WALLET
    OBJS += \
        obj/db.o \
        obj/miner.o \
        obj/rpcdump.o \
        obj/rpcmining.o \
        obj/rpcwallet.o \
        obj/wallet.o \
        obj/walletdb.o
endif

all: bitbayd.exe

LIBS += $(CURDIR)/leveldb/out-static/libleveldb.a $(CURDIR)/leveldb/out-static/libmemenv.a 
LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)
DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
OBJS += obj/txdb-leveldb.o
leveldb/out-static/libleveldb.a:
	cd leveldb;  CC=gcc CXX=g++ TARGET_OS=OS_WINDOWS_CROSSCOMPILE make OPT="-fno-keep-inline-dllexport -O2"; cd ..
obj/txdb-leveldb.o: leveldb/out-static/libleveldb.a

obj/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -o $@ $<

obj/scrypt-x86.o: scrypt-x86.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

obj/scrypt-x86_64.o: scrypt-x86_64.S
	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<

bitbayd.exe: $(OBJS:obj/%=obj/%)
	g++ -Wl,-s -static -Wl,-subsystem,console $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

clean:
	-del /Q bitbayd
	-del /Q obj\*

FORCE:
